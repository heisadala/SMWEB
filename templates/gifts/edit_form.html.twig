<div class='row  justify-content-between'>
    <div class="col-3">
         <div class="dropdown">
                      <button class="btn " data-bs-toggle="dropdown" type="button">
                        <img class="rounded-circle" src="{{ server_base }}/images/icon/squared-menu-96.png">
                    </button>
                    <ul class="dropdown-menu p-2 dropdown-menu-end sm-lego-dropdown" >
                        <li><a class="dropdown-item" href="{{ server_base }}">
                            <img class="img-fluid" width='36' height='36' src="{{ server_base }}/images/icon/Home.png"
                              alt='HOME'
                              title='HOME'
                            ></a>
                        </li>
                          <li><hr class="dropdown-divider"></li>
                        <li><a class="dropdown-item" href="{{ server_base }}/DB">
                            <img class="img-fluid" width='36' height='36' src="{{ server_base }}/images/icon/Database.png"
                              alt='DATABASE'
                              title='DATABASE'
                            ></a>
                        </li>
                          <li><hr class="dropdown-divider"></li>
                        <li><a class="dropdown-item" href="{{ server_base }}/DB/LEGO/HOME">
                            <img class="img-fluid" width='36' height='36' src="{{ server_base }}/images/icon/Gifts.png"
                              alt='GIFTS'
                              title='GIFTS'
                            ></a>
                        </li>
                    </ul>
        </div>
    </div>
    <div id='sm-body-lego-edit-form-col-2' 
        class="col m-5 border border-warning border-5 rounded-4 bg-iceblue">
        <div class="container text-white mt-3">

            {{ form_start(gifts_form,  {'attr': {'novalidate': 'novalidate'}}) }}

            <p class='text-center'><b>ITEM</b></p>
            {{ form_label(gifts_form.name) }}
            {{ form_widget(gifts_form.name) }}

            {{ form_label(gifts_form.gift) }}
            {{ form_widget(gifts_form.gift) }}
            <div class='invalid-feedback' id='gifts_add_form_gift_feedback'></div>


            {# {{ form_label(lego_form.theme) }} #}
            {# {{ form_widget(lego_form.theme, {'value': 'City'}) }} #}

            {{ form_end(gifts_form) }}
        </div>
    </div>
    <div id='sm-body-lego-edit-form-col-3' class="col-3 d-none d-lg-block"></div>

</div>

<script>
function giftsFormCheckValidity(element) {

    var error = false;
    document.getElementById('gifts_edit_form_Update').disabled = false;

    var gift = document.forms['gifts_edit_form']['gifts_edit_form_gift'];
    var gift_feedback = document.getElementById("gifts_edit_form_gift_feedback");
    gift_feedback.innerHTML = "";

    if (!gift.checkValidity()) {
        gift_feedback.innerHTML = "Please provide valid name of gift";
        error = true;
    } 

    document.forms['gifts_edit_form'].classList.add('was-validated');

    if (error) {
        document.getElementById('gifts_edit_form_Update').disabled = true;
    }
}



// Example starter JavaScript for disabling form submissions if there are invalid fields
{# (function () {
  'use strict'

  // Fetch all the forms we want to apply custom Bootstrap validation styles to
  var forms = document.querySelectorAll('.needs-validation')

  // Loop over them and prevent submission
  Array.prototype.slice.call(forms)
    .forEach(function (form) {
      form.addEventListener('submit', function (event) {
        if (!form.checkValidity()) {
          event.preventDefault()
          event.stopPropagation()
        }

        form.classList.add('was-validated')
      }, false)
    })
})() #}

</script>